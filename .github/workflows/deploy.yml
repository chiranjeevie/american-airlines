name: Terraform Apply and Destroy
on:
  push:
    branches:
      - main
      - testing_dispatch
  workflow_dispatch:
    inputs:        
      action:
        type: choice
        required: true
        description: select terraform action
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      run: terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Terraform Apply or Destroy
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: |
        if [ "${{ github.event.inputs.action }}" == "apply" ]; then
          terraform apply  -auto-approve
        elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
          terraform destroy  -auto-approve
        else
          echo "Invalid action specified. Please choose 'apply' or 'destroy'."
          exit 1
        fi
    - name: Get Resource Group Name
      id: resource_group
      run: echo "::set-output name=RESOURCE_GROUP_NAME::$(terraform output -json resource_group_name | jq -r '.')"
    - name: Build and Deploy Java or .NET REST API
      run: |
        # place holder for java or .net app deploy to app service
        
      env:
        app_service_name: ${{ matrix.app_service_name }}
        runtime: ${{ matrix.runtime }}
